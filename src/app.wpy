<style lang='less'>
@import './zanui/index.wxss';
@import './assets/fonts/iconfont.less';
@import './assets/styles/app.less';
@import './assets/styles/utils.less';

page {
  height: 100%;
  background-color: #efeff4;
}
.container {
  width: 100%;
}
</style>

<script>
import wepy from 'wepy'
import req from '@/network'
import configStore from './store'
import * as interceptor from '@/network/interceptor'
import { setStore } from 'wepy-redux'
import { baseUrl } from '@/config'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/comment',
      'pages/settings',
      'pages/profile',
      'pages/about',
      'pages/publish'
    ],
    window: {
      backgroundColor: '#efeff4',
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#ff9630',
      navigationBarTitleText: '万事屋',
      navigationBarTextStyle: 'white'
    },
    tabBar: {
      color: '#929292',
      selectedColor: '#ff9630',
      backgroundColor: '#f7f7f8',
      borderStyle: 'white',
      list: [
        {
          pagePath: 'pages/index',
          text: '首页',
          iconPath: 'assets/images/home-outline.png',
          selectedIconPath: 'assets/images/home-selected.png'
        },
        {
          pagePath: 'pages/settings',
          text: '设置',
          iconPath: 'assets/images/settings-outline.png',
          selectedIconPath: 'assets/images/settings-selected.png'
        }
      ]
    }
  }

  globalData = {
    userInfo: null,
    location: null
  }

  constructor() {
    super()
    // 开启2个中间件
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    req.baseUrl(baseUrl).interceptor(interceptor.request, interceptor.response)
  }

  getUserInfo() {
    if (this.globalData.userInfo) {
      return new Promise((resolve, reject) => {
        resolve(this.globalData.userInfo)
      })
    }
    return wepy
      .getUserInfo()
      .then(userInfo => {
        return userInfo
      })
      .then(userInfo => {
        return wepy.login().then(wxLogin => {
          wxLogin.userInfo = userInfo
          return wxLogin
        })
      })
      .then(wxLogin => {
        return req
          .post('login', {
            code: wxLogin.code,
            avatar: wxLogin.userInfo.userInfo.avatarUrl,
            name: wxLogin.userInfo.userInfo.nickName,
            gender: wxLogin.userInfo.userInfo.gender
          })
          .then(res => {
            wx.setStorageSync('token', res.data.token)
            this.globalData.userInfo = this.data
            return res.data
          })
      })
  }
}
</script>
